%% Exports data of the FOB microscope for LaTeX

parameters = struct( ...
    'path', '.', ...
    'filename', 'Brillouin-*', ...
    'ODT', struct( ...
        'RI', struct( ...
            'cax', [1.337 1.47], ...
            'zReference', 'Dish', ...   % ['Brillouin', 'Dish', 'ODT']
            ...                         % Reference for the z-position of the RI slice to export, default is 'Brillouin'
            ...                         % 'Brillouin': export the RI relative to the Brillouin measurement
            ...                         %              --> good for x-y-maps
            ...                         % 'Dish':      export the RI relative to the detected glass bottom dish interface
            ...                         %              --> good to always get the same height above the dish
            ...                         % 'ODT':       export the RI relative to the center of the ODT measurement
            ...                         %              --> similar to the preview exports of the ODT evaluation
            'z', 3 ...                  % [ï¿½m]  z-position at which to export (relative to the specified reference)
        ), ...
        'density', struct( ...
            'cax', [1.0 1.05] ...
        ) ...
    ), ...
    'BM', struct( ...
        'validity', 40, ...
        'shift', struct( ...
            'cax', [7.3 9.0] ...
        ), ...
        'intensity', struct( ...
            'cax', [0 1] ...
        ) ...
   ), ...
   'Modulus', struct( ...
        'validity', 40, ...
        'M', struct( ...
            'cax', [2 4.4] ...
        ), ...
        'M_woRI_norm', struct( ...
            'cax', [-60 60] ...
        ) ...
    ), ...
   'Fluorescence', struct( ...
        'backgroundFile', 'background_Brillouin-2', ...
        'combinations', {{'rg_', 'rgb'}} ...
    ) ...
);

%%
files = dir([parameters.path filesep '**' filesep parameters.filename '.h5']);

for jj = 1:length(files)
    %% Find all matching files
    [~, filename, ~] = fileparts(files(jj).name);
    parameters.filename = filename;
    parameters.path = replace(files(jj).folder, [filesep 'RawData'], '');
    
    %% directory for the plots
    plotDir = [parameters.path filesep 'Plots'];
    if ~exist(plotDir, 'dir')
        mkdir(plotDir);
    end
    barePlotDir = [plotDir filesep 'Bare'];
    if ~exist(barePlotDir, 'dir')
        mkdir(barePlotDir);
    end
    axisPlotDir = [plotDir filesep 'WithAxis'];
    if ~exist(axisPlotDir, 'dir')
        mkdir(axisPlotDir);
    end

    %% Refractive index
    plotRefractiveIndex(parameters);

    %% Fluorescence and Brightfield
    plotFluorescence(parameters);
    plotCombinedFluorescence(parameters);

    %% Brillouin shift and longitudinal modulus
    plotBrillouinModulus(parameters);
    plotBrillouinModulusDeviation(parameters);
end
